{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.jsx","components/sign-in/sign-in.jsx","components/sign-up/sign-up.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","FormInput","props","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","alert","SignInAndSignUp"],"mappings":"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","file":"static/js/6.b63639ca.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\nimport './form-input.scss';\n\nfunction FormInput(props) {\n\tconst { handleChange, label, ...otherProps } = props;\n\n\treturn (\n\t\t<div className='group'>\n\t\t\t<input className='form-input' onChange={handleChange} {...otherProps} />\n\t\t\t{label ? (\n\t\t\t\t<label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>{label}</label>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nexport default FormInput;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-in.scss';\n\nfunction SignIn({ googleSignInStart, emailSignInStart }) {\n\tconst [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\n\tconst { email, password } = userCredentials;\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\temailSignInStart(email, password);\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { value, name } = event.target;\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<div className='sign-in'>\n\t\t\t<h2 className='title'>I already have an account</h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput name='email' type='email' handleChange={handleChange} value={email} label='email' required />\n\t\t\t\t<FormInput\n\t\t\t\t\tname='password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel='password'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\n\t\t\t\t\t<CustomButton onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport './sign-up.scss';\n\nfunction SignUp({ signUpStart }) {\n\tconst [userCredentials, setUserCredentials] = useState({\n\t\tdisplayName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmPassword: ''\n\t});\n\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"passwords don't match\");\n\t\t\treturn;\n\t\t}\n\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<div className='sign-up'>\n\t\t\t<h2 className='title'>I do not have a account</h2>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className='sign-up-form' onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='displayName'\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel='Display Name'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput type='email' name='email' value={email} onChange={handleChange} label='Email' required />\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel='Password'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport SignIn from '../../components/sign-in/sign-in';\nimport SignUp from '../../components/sign-up/sign-up';\nimport './sign-in-and-sign-up.scss';\n\nfunction SignInAndSignUp(props) {\n\treturn (\n\t\t<div className='sign-in-and-sign-up'>\n\t\t\t<SignIn />\n\t\t\t<SignUp />\n\t\t</div>\n\t);\n}\n\nexport default SignInAndSignUp;\n"],"sourceRoot":""}