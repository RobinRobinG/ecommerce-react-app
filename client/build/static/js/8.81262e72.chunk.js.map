{"version":3,"sources":["components/checkout-item/checkout-item.jsx","components/stripe-button/stripe-button.jsx","pages/checkout/checkout.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","props","cartItem","imageUrl","name","price","quantity","className","alt","src","onClick","clearCart","priceForStripe","getPriceForStripe","onToken","token","a","axios","url","method","data","amount","alert","console","log","JSON","parse","label","billingAddress","shippingAddress","description","panelLabel","stripeKey","renderCheckoutHeader","map","header","key","renderHeaderBlock","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","id","renderCartItems"],"mappings":"wOAiCA,IAMeA,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACvCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG1BH,EAjCf,SAAsBO,GAAQ,IACrBC,EAA6CD,EAA7CC,SAAUN,EAAmCK,EAAnCL,UAAWG,EAAwBE,EAAxBF,QAASC,EAAeC,EAAfD,WAC9BG,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAE/B,OACC,yBAAKC,UAAU,iBACd,yBAAKA,UAAU,mBACd,yBAAKC,IAAI,OAAOC,IAAKN,KAEtB,0BAAMI,UAAU,QAAQH,GACxB,0BAAMG,UAAU,YACf,yBAAKA,UAAU,QAAQG,QAAS,kBAAMV,EAAWE,KAAjD,UAGA,0BAAMK,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAAQG,QAAS,kBAAMX,EAAQG,KAA9C,WAID,0BAAMK,UAAU,SAAhB,IAA0BF,GAC1B,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMd,EAAUM,KAAxD,c,4DCyBH,IAIeR,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCgB,UAAW,kBAAMhB,EAASgB,mBAGbjB,EA7Cf,SAA8BO,GAAQ,IAC5BI,EAAqBJ,EAArBI,MAAOM,EAAcV,EAAdU,UACTC,EANR,SAA2BP,GACzB,OAAe,IAARA,EAKgBQ,CAAkBR,GAGnCS,EAAO,uCAAG,WAAMC,GAAN,SAAAC,EAAA,+EAEWC,IAAM,CAC3BC,IAAK,WACLC,OAAQ,OACRC,KAAM,CACJC,OAAQT,EACRG,WAPQ,gBAYVO,MAAM,sBACNX,KAbU,gDAgBZY,QAAQC,IAAI,iBAAkBC,KAAKC,MAAL,OAC9BJ,MAAM,wCAjBM,yDAAH,sDAqBb,OACE,kBAAC,IAAD,CACEK,MAAM,UACNvB,KAAK,UACLwB,gBAAc,EACdC,iBAAe,EACfC,YAAW,yBAAoBzB,GAC/BgB,OAAQT,EACRmB,WAAW,UACXhB,MAAOD,EACPkB,UAjCmB,wC,eCkBzB,SAASC,IAGR,OAAO,yBAAK1B,UAAU,mBAFN,CAAC,UAAW,cAAe,WAAY,QAAS,UAEf2B,KAAI,SAAAC,GAAM,OAX5D,SAA2BA,GAC1B,OACC,yBAAK5B,UAAU,eAAe6B,IAAKD,GAClC,8BAAOA,IAQsDE,CAAkBF,OAiBlF,IAAMG,EAAkBC,YAAyB,CAChDC,UAAWC,IACXC,MAAOC,MAGOjD,sBAAQ4C,EAAR5C,EAnBf,SAAsBO,GAAQ,IACrBuC,EAAqBvC,EAArBuC,UAAWE,EAAUzC,EAAVyC,MAEnB,OACC,yBAAKnC,UAAU,iBACb0B,IAvBJ,SAAyBO,GACxB,OAAOA,EAAUN,KAAI,SAAAhC,GAAQ,OAAI,kBAAC,EAAD,CAAckC,IAAKlC,EAAS0C,GAAI1C,SAAUA,OAuBxE2C,CAAgBL,GACjB,yBAAKjC,UAAU,SAAf,WAAgCmC,GAjCjC,yBAAKnC,UAAU,gBAAf,2DAEC,6BAFD,gFAmCC,kBAAC,EAAD,CAAsBF,MAAOqC","file":"static/js/8.81262e72.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\n\nimport './checkout-item.scss';\n\nfunction CheckoutItem(props) {\n\tconst { cartItem, clearItem, addItem, removeItem } = props;\n\tconst { imageUrl, name, price, quantity } = cartItem;\n\n\treturn (\n\t\t<div className='checkout-item'>\n\t\t\t<div className='image-container'>\n\t\t\t\t<img alt='item' src={imageUrl} />\n\t\t\t</div>\n\t\t\t<span className='name'>{name}</span>\n\t\t\t<span className='quantity'>\n\t\t\t\t<div className='arrow' onClick={() => removeItem(cartItem)}>\n\t\t\t\t\t&#10094;\n\t\t\t\t</div>\n\t\t\t\t<span className='value'>{quantity}</span>\n\t\t\t\t<div className='arrow' onClick={() => addItem(cartItem)}>\n\t\t\t\t\t&#10095;\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t\t<span className='price'>${price}</span>\n\t\t\t<div className='remove-button' onClick={() => clearItem(cartItem)}>\n\t\t\t\t&#10005;\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tclearItem: item => dispatch(clearItemFromCart(item)),\n\taddItem: item => dispatch(addItem(item)),\n\tremoveItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\n\nfunction getPriceForStripe(price) {\n  return price * 100;\n}\n\nfunction StripeCheckoutButton(props) {\n  const { price, clearCart } = props;\n  const priceForStripe = getPriceForStripe(price);\n  const publishableKey = \"pk_test_bCeL9TDVphSTEYQG2RxNpqOE\";\n\n  const onToken = async token => {\n    try {\n      const response = await axios({\n        url: \"/payment\",\n        method: \"post\",\n        data: {\n          amount: priceForStripe,\n          token,\n        },\n      });\n\n      if (response) {\n        alert(\"Payment successful\");\n        clearCart();\n      }\n    } catch (error) {\n      console.log(\"Payment error:\", JSON.parse(error));\n      alert(\"There was an issue with your payment\");\n    }\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"My Shop\"\n      billingAddress\n      shippingAddress\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart()),\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutItem from '../../components/checkout-item/checkout-item';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cart.selectors';\n\nimport './checkout.scss';\n\nfunction renderWarningText() {\n\treturn (\n\t\t<div className='test-warning'>\n\t\t\t*Please use the following test credit card for payments*\n\t\t\t<br />\n\t\t\t4242 4242 4242 4242 - exp: Any future date - cvc: Any 3 digits - brand: Visa\n\t\t</div>\n\t);\n}\n\nfunction renderCartItems(cartItems) {\n\treturn cartItems.map(cartItem => <CheckoutItem key={cartItem.id} cartItem={cartItem} />);\n}\n\nfunction renderHeaderBlock(header) {\n\treturn (\n\t\t<div className='header-block' key={header}>\n\t\t\t<span>{header}</span>\n\t\t</div>\n\t);\n}\n\nfunction renderCheckoutHeader() {\n\tconst headers = ['Product', 'Description', 'Quantity', 'Price', 'Remove'];\n\n\treturn <div className='checkout-header'>{headers.map(header => renderHeaderBlock(header))}</div>;\n}\n\nfunction CheckoutPage(props) {\n\tconst { cartItems, total } = props;\n\n\treturn (\n\t\t<div className='checkout-page'>\n\t\t\t{renderCheckoutHeader()}\n\t\t\t{renderCartItems(cartItems)}\n\t\t\t<div className='total'>Total: ${total}</div>\n\t\t\t{renderWarningText()}\n\t\t\t<StripeCheckoutButton price={total} />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tcartItems: selectCartItems,\n\ttotal: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}